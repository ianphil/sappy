!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Album	../Models/album.py	/^class Album:$/;"	kind:class	line:1
Artist	../Models/artist.py	/^class Artist:$/;"	kind:class	line:1
Artist	../Services/cosmosdb.py	/^from Models.artist import Artist$/;"	kind:namespace	line:2
Artist	../Services/wiki_data.py	/^from Models.artist import Artist$/;"	kind:namespace	line:3
BeautifulSoup	../POC/song_lyrics.py	/^from bs4 import BeautifulSoup$/;"	kind:namespace	line:2
BeautifulSoup	../Services/genius_lyrics.py	/^from bs4 import BeautifulSoup$/;"	kind:namespace	line:2
Cognitive_Services	../Services/cognitive_services.py	/^class Cognitive_Services:$/;"	kind:class	line:5
Cognitive_Services	../application.py	/^from Services.cognitive_services import Cognitive_Services$/;"	kind:namespace	line:4
Config	../Services/config.py	/^class Config:$/;"	kind:class	line:5
Config	../application.py	/^from Services.config import Config$/;"	kind:namespace	line:1
Config	../tests.py	/^from Services.config import Config$/;"	kind:namespace	line:2
CosmosDb	../Services/cosmosdb.py	/^class CosmosDb:$/;"	kind:class	line:5
CosmosDb	../application.py	/^from Services.cosmosdb import CosmosDb$/;"	kind:namespace	line:3
DataEncoder	../POC/data_encoder.py	/^class DataEncoder(JSONEncoder):$/;"	kind:class	line:3
JSONEncoder	../POC/data_encoder.py	/^from json import JSONEncoder$/;"	kind:namespace	line:1
JSONEncoder	../Services/cosmosdb.py	/^from json import JSONEncoder$/;"	kind:namespace	line:3
KEY_VAULT_URI	../POC/keyvault.py	/^KEY_VAULT_URI = 'https:\/\/<tmp>.vault.azure.net'$/;"	kind:variable	line:4
KeyVault	../Services/config.py	/^from Services.keyvault import KeyVault$/;"	kind:namespace	line:3
KeyVault	../Services/keyvault.py	/^class KeyVault:$/;"	kind:class	line:4
KeyVaultAuthentication	../POC/keyvault.py	/^from azure.keyvault import KeyVaultClient, KeyVaultAuthentication$/;"	kind:namespace	line:1
KeyVaultClient	../POC/keyvault.py	/^from azure.keyvault import KeyVaultClient, KeyVaultAuthentication$/;"	kind:namespace	line:1
KeyVaultClient	../Services/keyvault.py	/^from azure.keyvault import KeyVaultClient, KeyVaultId$/;"	kind:namespace	line:1
KeyVaultId	../Services/keyvault.py	/^from azure.keyvault import KeyVaultClient, KeyVaultId$/;"	kind:namespace	line:1
Logger	../Services/logger.py	/^class Logger:$/;"	kind:class	line:3
Logger	../tests.py	/^from Services.logger import Logger$/;"	kind:namespace	line:3
Lyric	../Models/lyric.py	/^class Lyric:$/;"	kind:class	line:1
Lyrics	../Services/genius_lyrics.py	/^class Lyrics:$/;"	kind:class	line:4
Lyrics	../application.py	/^from Services.genius_lyrics import Lyrics$/;"	kind:namespace	line:5
Musician	../Models/musician.py	/^class Musician:$/;"	kind:class	line:1
Secrets	../Models/secrets.py	/^class Secrets:$/;"	kind:class	line:1
Secrets	../Services/config.py	/^from Models.secrets import Secrets$/;"	kind:namespace	line:2
ServicePrincipalCredentials	../POC/keyvault.py	/^from azure.common.credentials import ServicePrincipalCredentials, UserPassCredentials$/;"	kind:namespace	line:2
ServicePrincipalCredentials	../Services/keyvault.py	/^from azure.common.credentials import ServicePrincipalCredentials$/;"	kind:namespace	line:2
Spotify	../Services/spotify.py	/^class Spotify:$/;"	kind:class	line:4
SpotifyClientCredentials	../POC/add_album_data.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:4
SpotifyClientCredentials	../POC/clear_track_list.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:4
SpotifyClientCredentials	../POC/delete_albums.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:3
SpotifyClientCredentials	../POC/get_album_data.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:3
SpotifyClientCredentials	../POC/get_artist_info.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:3
SpotifyClientCredentials	../POC/get_track_data.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:4
SpotifyClientCredentials	../POC/remove_albums_no_in_80s.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:4
SpotifyClientCredentials	../POC/simple_spotify.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:3
SpotifyClientCredentials	../Services/spotify.py	/^from spotipy.oauth2 import SpotifyClientCredentials$/;"	kind:namespace	line:2
TEST_LOG_FILENAME	../tests.py	/^TEST_LOG_FILENAME = 'logs\/tests.log'$/;"	kind:variable	line:8
Track	../Models/track.py	/^class Track:$/;"	kind:class	line:1
UserPassCredentials	../POC/keyvault.py	/^from azure.common.credentials import ServicePrincipalCredentials, UserPassCredentials$/;"	kind:namespace	line:2
WikiData	../Services/wiki_data.py	/^class WikiData:$/;"	kind:class	line:5
WikiData	../application.py	/^from Services.wiki_data import WikiData$/;"	kind:namespace	line:2
__init__	../Models/album.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Models/artist.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Models/lyric.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Models/musician.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Models/secrets.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Models/track.py	/^    def __init__(self):$/;"	kind:member	line:2
__init__	../Services/cognitive_services.py	/^    def __init__(self, config):$/;"	kind:member	line:6
__init__	../Services/config.py	/^    def __init__(self, secrets_filename):$/;"	kind:member	line:6
__init__	../Services/cosmosdb.py	/^    def __init__(self, config):$/;"	kind:member	line:6
__init__	../Services/genius_lyrics.py	/^    def __init__(self, config):$/;"	kind:member	line:5
__init__	../Services/keyvault.py	/^    def __init__(self, uri, config):$/;"	kind:member	line:5
__init__	../Services/logger.py	/^    def __init__(self, log_filename, log_level):$/;"	kind:member	line:4
__init__	../Services/spotify.py	/^    def __init__(self, config):$/;"	kind:member	line:5
__init__	../Services/wiki_data.py	/^    def __init__(self, page_name):$/;"	kind:member	line:6
__init__.py	../Models/__init__.py	1;"	kind:file	line:1
__init__.py	../Services/__init__.py	1;"	kind:file	line:1
add_album_data.py	../POC/add_album_data.py	1;"	kind:file	line:1
album.py	../Models/album.py	1;"	kind:file	line:1
album_list	../POC/get_album_data.py	/^    album_list = spotify.artist_albums(band["Spotify_Id"])$/;"	kind:variable	line:27
album_list	../POC/update_album_list.py	/^        album_list = client.QueryDocuments(coll['_self'], album_query, options)$/;"	kind:variable	line:32
application.py	../application.py	1;"	kind:file	line:1
artist.py	../Models/artist.py	1;"	kind:file	line:1
artist_name	../POC/song_lyrics.py	/^artist_name = "Sia"$/;"	kind:variable	line:8
auth_callack	../POC/keyvault.py	/^def auth_callack(server, resource, scope):$/;"	kind:function	line:6
band_data_cleaner.py	../POC/band_data_cleaner.py	1;"	kind:file	line:1
band_list	../POC/update_album_list.py	/^band_list = client.QueryDocuments(coll['_self'], band_query, options)$/;"	kind:variable	line:20
base_url	../POC/song_lyrics.py	/^base_url = "http:\/\/api.genius.com"$/;"	kind:variable	line:4
clear_track_list.py	../POC/clear_track_list.py	1;"	kind:file	line:1
client	../POC/add_album_data.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:12
client	../POC/band_data_cleaner.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:8
client	../POC/clear_track_list.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:12
client	../POC/delete_albums.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:9
client	../POC/get_album_data.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:9
client	../POC/get_artist_info.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:9
client	../POC/get_track_data.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:12
client	../POC/keyvault.py	/^client = KeyVaultClient(KeyVaultAuthentication(auth_callack))$/;"	kind:variable	line:16
client	../POC/remove_albums_no_in_80s.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:12
client	../POC/update_album_list.py	/^client = document_client.DocumentClient(secrets['COSMOS_ENDPOINT'], {'masterKey': secrets['COSMOS_MASTERKEY']})$/;"	kind:variable	line:10
client	../POC/wiki_scraper.py	/^client = document_client.DocumentClient($/;"	kind:variable	line:9
client	../Services/cognitive_services.py	/^import http.client$/;"	kind:namespace	line:3
client_credentials_manager	../POC/add_album_data.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:16
client_credentials_manager	../POC/clear_track_list.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:16
client_credentials_manager	../POC/delete_albums.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:13
client_credentials_manager	../POC/get_album_data.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:13
client_credentials_manager	../POC/get_artist_info.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:13
client_credentials_manager	../POC/get_track_data.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:16
client_credentials_manager	../POC/remove_albums_no_in_80s.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:16
client_credentials_manager	../POC/simple_spotify.py	/^client_credentials_manager = SpotifyClientCredentials(secrets["SPOTIFY_CLIENT_ID"], secrets["SPOTIFY_CLIENT_SECRET"])$/;"	kind:variable	line:8
cog	../application.py	/^cog = Cognitive_Services(config)$/;"	kind:variable	line:11
cognitive_services.py	../Services/cognitive_services.py	1;"	kind:file	line:1
coll	../POC/add_album_data.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:14
coll	../POC/band_data_cleaner.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:10
coll	../POC/clear_track_list.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:14
coll	../POC/delete_albums.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:11
coll	../POC/get_album_data.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:11
coll	../POC/get_artist_info.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:11
coll	../POC/get_track_data.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:14
coll	../POC/remove_albums_no_in_80s.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:14
coll	../POC/update_album_list.py	/^coll = next((coll for coll in client.ReadCollections(db['_self']) if coll['id'] == secrets["DOCUMENTDB_COLLECTION"]))$/;"	kind:variable	line:12
collection	../POC/wiki_scraper.py	/^collection = client.CreateCollection($/;"	kind:variable	line:15
config	../application.py	/^config = Config("secrets.json").get_secrets()$/;"	kind:variable	line:9
config.py	../Services/config.py	1;"	kind:file	line:1
cosmosdb.py	../Services/cosmosdb.py	1;"	kind:file	line:1
count	../POC/add_album_data.py	/^count = 1$/;"	kind:variable	line:28
count	../POC/clear_track_list.py	/^count = 1$/;"	kind:variable	line:28
count	../POC/get_album_data.py	/^count = 1$/;"	kind:variable	line:25
count	../POC/get_track_data.py	/^count = 1$/;"	kind:variable	line:27
count	../POC/remove_albums_no_in_80s.py	/^count = 1$/;"	kind:variable	line:28
count	../POC/wiki_scraper.py	/^count = 1$/;"	kind:variable	line:23
create_key	../Services/keyvault.py	/^    def create_key(self, key_name, key_type):$/;"	kind:member	line:12
create_secret	../Services/keyvault.py	/^    def create_secret(self, name, secret):$/;"	kind:member	line:25
ctor_from_dict	../Models/artist.py	/^    def ctor_from_dict(self, **entries):$/;"	kind:member	line:15
data	../application.py	/^        data = str(lyric).lstrip('[').rstrip(']')$/;"	kind:variable	line:17
data_encoder.py	../POC/data_encoder.py	1;"	kind:file	line:1
db	../POC/add_album_data.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:13
db	../POC/band_data_cleaner.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:9
db	../POC/clear_track_list.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:13
db	../POC/delete_albums.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:10
db	../POC/get_album_data.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:10
db	../POC/get_artist_info.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:10
db	../POC/get_track_data.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:13
db	../POC/remove_albums_no_in_80s.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:13
db	../POC/update_album_list.py	/^db = next((data for data in client.ReadDatabases() if data['id'] == secrets["DOCUMENTDB_DATABASE"]))$/;"	kind:variable	line:11
db	../POC/wiki_scraper.py	/^db = next((data for data in client.ReadDatabases() $/;"	kind:variable	line:12
default	../POC/data_encoder.py	/^    def default(self, o):$/;"	kind:member	line:4
delete_albums.py	../POC/delete_albums.py	1;"	kind:file	line:1
delete_key	../Services/keyvault.py	/^    def delete_key(self, name):$/;"	kind:member	line:21
delete_secret	../Services/keyvault.py	/^    def delete_secret(self, name):$/;"	kind:member	line:38
document_client	../POC/add_album_data.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:5
document_client	../POC/band_data_cleaner.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:3
document_client	../POC/clear_track_list.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:5
document_client	../POC/delete_albums.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:4
document_client	../POC/get_album_data.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:4
document_client	../POC/get_artist_info.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:4
document_client	../POC/get_track_data.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:5
document_client	../POC/remove_albums_no_in_80s.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:5
document_client	../POC/update_album_list.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:3
document_client	../POC/wiki_scraper.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:4
document_client	../Services/cosmosdb.py	/^from pydocumentdb import document_client$/;"	kind:namespace	line:1
genius_lyrics.py	../Services/genius_lyrics.py	1;"	kind:file	line:1
get_album_data.py	../POC/get_album_data.py	1;"	kind:file	line:1
get_album_info	../Services/spotify.py	/^    def get_album_info(self, album):$/;"	kind:member	line:18
get_album_track_list	../Services/spotify.py	/^    def get_album_track_list(self, album):$/;"	kind:member	line:22
get_artist_album_list	../Services/spotify.py	/^    def get_artist_album_list(self, artist):$/;"	kind:member	line:14
get_artist_info	../Services/spotify.py	/^    def get_artist_info(self, artist):$/;"	kind:member	line:10
get_artist_info.py	../POC/get_artist_info.py	1;"	kind:file	line:1
get_artist_names	../Services/wiki_data.py	/^    def get_artist_names(self):$/;"	kind:member	line:9
get_artists	../Services/cosmosdb.py	/^    def get_artists(self):$/;"	kind:member	line:25
get_big_hair_list	../POC/wiki_scraper.py	/^def get_big_hair_list():$/;"	kind:function	line:18
get_keys	../Services/keyvault.py	/^    def get_keys(self):$/;"	kind:member	line:17
get_lyrics	../Services/genius_lyrics.py	/^    def get_lyrics(self, artist_name, song_title):$/;"	kind:member	line:25
get_secret	../Services/keyvault.py	/^    def get_secret(self, name, version = ''):$/;"	kind:member	line:34
get_secrets	../Services/config.py	/^    def get_secrets(self):$/;"	kind:member	line:9
get_secrets	../Services/keyvault.py	/^    def get_secrets(self):$/;"	kind:member	line:30
get_sentiment	../Services/cognitive_services.py	/^    def get_sentiment(self, document):$/;"	kind:member	line:9
get_track_data.py	../POC/get_track_data.py	1;"	kind:file	line:1
headers	../POC/song_lyrics.py	/^headers = {'Authorization': 'Bearer -qabY5BBmXqGE'}$/;"	kind:variable	line:5
http	../Services/cognitive_services.py	/^import http.client$/;"	kind:namespace	line:3
insert	../Services/cosmosdb.py	/^    def insert(self, entity):$/;"	kind:member	line:21
json	../POC/add_album_data.py	/^import json$/;"	kind:namespace	line:1
json	../POC/band_data_cleaner.py	/^import json$/;"	kind:namespace	line:2
json	../POC/clear_track_list.py	/^import json$/;"	kind:namespace	line:1
json	../POC/delete_albums.py	/^import json$/;"	kind:namespace	line:1
json	../POC/get_album_data.py	/^import json$/;"	kind:namespace	line:1
json	../POC/get_artist_info.py	/^import json$/;"	kind:namespace	line:1
json	../POC/get_track_data.py	/^import json$/;"	kind:namespace	line:1
json	../POC/remove_albums_no_in_80s.py	/^import json$/;"	kind:namespace	line:1
json	../POC/simple_spotify.py	/^import json$/;"	kind:namespace	line:1
json	../POC/song_lyrics.py	/^  json = response.json()$/;"	kind:variable	line:28
json	../POC/update_album_list.py	/^import json$/;"	kind:namespace	line:1
json	../POC/wiki_scraper.py	/^import json$/;"	kind:namespace	line:3
json	../Services/cognitive_services.py	/^import json$/;"	kind:namespace	line:1
json	../Services/config.py	/^import json$/;"	kind:namespace	line:1
json	../Services/wiki_data.py	/^import json$/;"	kind:namespace	line:1
json	../application.py	/^import json$/;"	kind:namespace	line:6
key_bundle	../POC/keyvault.py	/^key_bundle = client.create_key(KEY_VAULT_URI, 'FirstKey', 'RSA')$/;"	kind:variable	line:18
keyvault.py	../POC/keyvault.py	1;"	kind:file	line:1
keyvault.py	../Services/keyvault.py	1;"	kind:file	line:1
log_error	../Services/logger.py	/^    def log_error(self, msg):$/;"	kind:member	line:8
log_info	../Services/logger.py	/^    def log_info(self, msg):$/;"	kind:member	line:14
logger	../tests.py	/^logger = Logger(TEST_LOG_FILENAME, 'TEST')$/;"	kind:variable	line:9
logger.py	../Services/logger.py	1;"	kind:file	line:1
logging	../POC/add_album_data.py	/^import logging$/;"	kind:namespace	line:3
logging	../POC/clear_track_list.py	/^import logging$/;"	kind:namespace	line:3
logging	../POC/get_track_data.py	/^import logging$/;"	kind:namespace	line:3
logging	../POC/remove_albums_no_in_80s.py	/^import logging$/;"	kind:namespace	line:3
logging	../POC/update_album_list.py	/^import logging$/;"	kind:namespace	line:2
logging	../Services/logger.py	/^import logging$/;"	kind:namespace	line:1
lyric.py	../Models/lyric.py	1;"	kind:file	line:1
lyric_list	../application.py	/^lyric_list = lyrics.splitlines()$/;"	kind:variable	line:14
lyrics	../application.py	/^lyrics = Lyrics(config).get_lyrics('Sia', 'Chandelier')$/;"	kind:variable	line:13
lyrics_from_song_api_path	../POC/song_lyrics.py	/^def lyrics_from_song_api_path(song_api_path):$/;"	kind:function	line:10
lyrics_from_song_api_path	../Services/genius_lyrics.py	/^    def lyrics_from_song_api_path(self, song_api_path):$/;"	kind:member	line:10
musician.py	../Models/musician.py	1;"	kind:file	line:1
name	../POC/simple_spotify.py	/^name = "Aerosmith"$/;"	kind:variable	line:11
options	../POC/add_album_data.py	/^options = {} $/;"	kind:variable	line:21
options	../POC/clear_track_list.py	/^options = {} $/;"	kind:variable	line:21
options	../POC/delete_albums.py	/^options = {} $/;"	kind:variable	line:18
options	../POC/get_album_data.py	/^options = {} $/;"	kind:variable	line:18
options	../POC/get_track_data.py	/^options = {} $/;"	kind:variable	line:21
options	../POC/remove_albums_no_in_80s.py	/^options = {} $/;"	kind:variable	line:21
options	../POC/update_album_list.py	/^        options = {} $/;"	kind:variable	line:28
options	../POC/update_album_list.py	/^options = {} $/;"	kind:variable	line:16
os	../tests.py	/^import os.path$/;"	kind:namespace	line:1
path	../tests.py	/^import os.path$/;"	kind:namespace	line:1
remove_albums_no_in_80s.py	../POC/remove_albums_no_in_80s.py	1;"	kind:file	line:1
requests	../POC/song_lyrics.py	/^import requests$/;"	kind:namespace	line:1
requests	../Services/genius_lyrics.py	/^import requests$/;"	kind:namespace	line:1
response	../POC/song_lyrics.py	/^  response = requests.get(search_url, headers=headers)$/;"	kind:variable	line:27
result_iterable	../POC/add_album_data.py	/^result_iterable = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:25
result_iterable	../POC/get_album_data.py	/^result_iterable = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:22
results	../POC/add_album_data.py	/^results = list(result_iterable)$/;"	kind:variable	line:26
results	../POC/clear_track_list.py	/^results = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:25
results	../POC/delete_albums.py	/^results = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:22
results	../POC/get_album_data.py	/^results = list(result_iterable)$/;"	kind:variable	line:23
results	../POC/get_artist_info.py	/^    results = spotify.search(q='artist:' + doc["Band_Name"], type='artist')$/;"	kind:variable	line:17
results	../POC/get_track_data.py	/^results = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:25
results	../POC/remove_albums_no_in_80s.py	/^results = client.QueryDocuments(coll['_self'], query, options)$/;"	kind:variable	line:25
results	../POC/simple_spotify.py	/^results = spotify.search(q='artist:' + name, type='artist')$/;"	kind:variable	line:12
score	../application.py	/^        score = cog.get_sentiment(str(data))$/;"	kind:variable	line:19
secrets	../POC/add_album_data.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:10
secrets	../POC/band_data_cleaner.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:6
secrets	../POC/clear_track_list.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:10
secrets	../POC/delete_albums.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:7
secrets	../POC/get_album_data.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:7
secrets	../POC/get_artist_info.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:7
secrets	../POC/get_track_data.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:10
secrets	../POC/remove_albums_no_in_80s.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:10
secrets	../POC/simple_spotify.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:6
secrets	../POC/update_album_list.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:8
secrets	../POC/wiki_scraper.py	/^    secrets = json.load(secrets_file)$/;"	kind:variable	line:7
secrets	../tests.py	/^secrets = Config("secrets_example.json").get_secrets()$/;"	kind:variable	line:17
secrets.py	../Models/secrets.py	1;"	kind:file	line:1
simple_spotify.py	../POC/simple_spotify.py	1;"	kind:file	line:1
song_api_path	../POC/song_lyrics.py	/^    song_api_path = song_info["result"]["api_path"]$/;"	kind:variable	line:35
song_info	../POC/song_lyrics.py	/^      song_info = hit$/;"	kind:variable	line:32
song_info	../POC/song_lyrics.py	/^  song_info = None$/;"	kind:variable	line:29
song_lyrics.py	../POC/song_lyrics.py	1;"	kind:file	line:1
song_title	../POC/song_lyrics.py	/^song_title = "Chandelier"$/;"	kind:variable	line:7
sp_album	../POC/add_album_data.py	/^        sp_album = spotify.album(album['Spotify_Id'])$/;"	kind:variable	line:31
sp_album	../POC/get_track_data.py	/^        sp_album = spotify.album(album['Spotify_Id'])$/;"	kind:variable	line:30
spotify	../POC/add_album_data.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:17
spotify	../POC/clear_track_list.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:17
spotify	../POC/delete_albums.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:14
spotify	../POC/get_album_data.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:14
spotify	../POC/get_artist_info.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:14
spotify	../POC/get_track_data.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:17
spotify	../POC/remove_albums_no_in_80s.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:17
spotify	../POC/simple_spotify.py	/^spotify = spotipy.Spotify(client_credentials_manager=client_credentials_manager)$/;"	kind:variable	line:9
spotify.py	../Services/spotify.py	1;"	kind:file	line:1
spotipy	../POC/add_album_data.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/clear_track_list.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/delete_albums.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/get_album_data.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/get_artist_info.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/get_track_data.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/remove_albums_no_in_80s.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../POC/simple_spotify.py	/^import spotipy$/;"	kind:namespace	line:2
spotipy	../Services/spotify.py	/^import spotipy$/;"	kind:namespace	line:1
tests.py	../tests.py	1;"	kind:file	line:1
time	../application.py	/^import time$/;"	kind:namespace	line:7
track.py	../Models/track.py	1;"	kind:file	line:1
update_album_list.py	../POC/update_album_list.py	1;"	kind:file	line:1
urllib	../Services/cognitive_services.py	/^import urllib$/;"	kind:namespace	line:2
wiki_data.py	../Services/wiki_data.py	1;"	kind:file	line:1
wiki_scraper.py	../POC/wiki_scraper.py	1;"	kind:file	line:1
wikipedia	../POC/wiki_scraper.py	/^import wikipedia$/;"	kind:namespace	line:2
wikipedia	../Services/wiki_data.py	/^import wikipedia$/;"	kind:namespace	line:2
